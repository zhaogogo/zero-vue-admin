// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	usercenteruser "github.com/zhaoqiang0201/zero-vue-admin/server/app/usercenter/api/internal/handler/usercenter/user"
	usercenterusermenu "github.com/zhaoqiang0201/zero-vue-admin/server/app/usercenter/api/internal/handler/usercenter/user/menu"
	usercenteruserpageset "github.com/zhaoqiang0201/zero-vue-admin/server/app/usercenter/api/internal/handler/usercenter/user/pageset"
	"github.com/zhaoqiang0201/zero-vue-admin/server/app/usercenter/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: usercenteruser.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/usercenter"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/usermenus",
				Handler: usercenterusermenu.UserMenusHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/allmenus",
				Handler: usercenterusermenu.AllMenusHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/usercenter"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/paginguser",
				Handler: usercenteruser.PagingUserHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/alluser",
				Handler: usercenteruser.AllUserHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/softdelete",
				Handler: usercenteruser.SoftDeleteUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/usercenter"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/userpageset",
				Handler: usercenteruserpageset.GetUserPageSetHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/setuserpageset",
				Handler: usercenteruserpageset.SetUserPageHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1/usercenter"),
	)
}
