// Code generated by goctl. DO NOT EDIT.
package types

type HttpCommonResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type TableCommonRequest struct {
	Page     int `json:"page,optional" validate:"required,numeric,gte=1,lte=999" comment:"page为必须值"`
	PageSize int `json:"pageSize,optional" validate:"required,numeric,gte=10,lte=100" comment:"pageSize为必须值"`
}

type TableCommonResponse struct {
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
	Total    int `json:"total"`
}

type LoginRequest struct {
	UserName string `json:"userName,optional" validate:"required" comment:"用户名字"`
	PassWord string `json:"passWord,optional" validate:"required" comment:"密码"`
}

type LoginResponse struct {
	HttpCommonResponse
	Token        string `json:"token"`
	ExpireAt     int64  `json:"expireAt"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type MenusResponse struct {
	HttpCommonResponse
	Menus []Menu `json:"menus"`
}

type AllMenusResponse struct {
	HttpCommonResponse
	Total uint64 `json:"total"`
	List  []Menu `json:"list"`
}

type Menu struct {
	ID         uint64      `json:"id"`
	ParentId   uint64      `json:"parentId"`
	Name       string      `json:"name"`
	Path       string      `json:"path"`
	Component  string      `json:"component"`
	Sort       int64       `json:"sort"`
	MenuMeta   MenuMeta    `json:"meta"`
	Children   []Menu      `json:"children,omitempty"`
	Parameters []Parameter `json:"parameters"`
}

type Parameter struct {
	UserID uint64 `json:"user_id"`
	Type   string `json:"type"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type MenuMeta struct {
	Title string `json:"title"`
	Icon  string `json:"icon"`
}

type User struct {
	ID         uint64 `json:"id"`
	Name       string `json:"name"`
	NickName   string `json:"nick_name"`
	PassWord   string `json:"password"`
	UserType   int64  `json:"type"`
	Email      string `json:"email"`
	Phone      string `json:"phone"`
	Department string `json:"department"`
	Position   string `json:"position"`
	CreateBy   string `json:"createBy"`
	CreateTime int64  `json:"create_time"`
	UpdateBy   string `json:"updateBy"`
	UpdateTime int64  `json:"update_time"`
	DeleteBy   string `json:"deleteBy"`
	DeleteTime int64  `json:"delete_time"`
	State      string `json:"state"` // todelete:用户已删除  resume:用户未删除
}

type PagingUserRequest struct {
	TableCommonRequest
}

type PagingUserResponse struct {
	HttpCommonResponse
	TableCommonResponse
	List []User `json:"list"`
}

type AllUserResponse struct {
	HttpCommonResponse
	Total int    `json:"total"`
	List  []User `json:"list"`
}

type SoftDeleteUserRequest struct {
	ID    uint64 `json:"id" validate:"required,numeric,gte=1" comment="用户ID为必填项"`
	State string `json:"state" validate:"required,oneof='deleted' 'resume'"`
}

type UserPageSetResponse struct {
	HttpCommonResponse
	Name            string `json:"name"`
	NickName        string `json:"nick_name"`
	Avatar          string `json:"avatar"`
	DefaultRouter   string `json:"defaultRouter"`
	SideMode        string `json:"sideMode"`
	ActiveTextColor string `json:"activeTextColor"`
	TextColor       string `json:"textColor"`
}

type UserPageRequest struct {
	Avatar          string `json:"avatar,default=,optional"`
	DefaultRouter   string `json:"defaultRouter,default=dashboard"`
	SideMode        string `json:"sideMode,default=#191a23"`
	ActiveTextColor string `json:"activeTextColor,default=#1890ff"`
	TextColor       string `json:"textColor,default=#fff"`
}
