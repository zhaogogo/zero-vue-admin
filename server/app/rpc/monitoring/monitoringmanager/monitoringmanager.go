// Code generated by goctl. DO NOT EDIT!
// Source: monitoringManager.proto

package monitoringmanager

import (
	"context"

	"github.com/zhaoqiang0201/zero-vue-admin/server/app/rpc/monitoring/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AlertRule               = pb.AlertRule
	AlertRuleCountRequest   = pb.AlertRuleCountRequest
	AlertRuleDetailResponse = pb.AlertRuleDetailResponse
	AlertRuleID             = pb.AlertRuleID
	AlertRuleLabelsResponse = pb.AlertRuleLabelsResponse
	AlertRulePagingRequest  = pb.AlertRulePagingRequest
	AlertRulePagingResponse = pb.AlertRulePagingResponse
	Empty                   = pb.Empty
	Total                   = pb.Total

	MonitoringManager interface {
		AlertRuleDetail(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleDetailResponse, error)
		AlertRuleLabels(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleLabelsResponse, error)
		AlertRulePaging(ctx context.Context, in *AlertRulePagingRequest, opts ...grpc.CallOption) (*AlertRulePagingResponse, error)
		AlertRuleCount(ctx context.Context, in *AlertRuleCountRequest, opts ...grpc.CallOption) (*Total, error)
	}

	defaultMonitoringManager struct {
		cli zrpc.Client
	}
)

func NewMonitoringManager(cli zrpc.Client) MonitoringManager {
	return &defaultMonitoringManager{
		cli: cli,
	}
}

func (m *defaultMonitoringManager) AlertRuleDetail(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleDetailResponse, error) {
	client := pb.NewMonitoringManagerClient(m.cli.Conn())
	return client.AlertRuleDetail(ctx, in, opts...)
}

func (m *defaultMonitoringManager) AlertRuleLabels(ctx context.Context, in *AlertRuleID, opts ...grpc.CallOption) (*AlertRuleLabelsResponse, error) {
	client := pb.NewMonitoringManagerClient(m.cli.Conn())
	return client.AlertRuleLabels(ctx, in, opts...)
}

func (m *defaultMonitoringManager) AlertRulePaging(ctx context.Context, in *AlertRulePagingRequest, opts ...grpc.CallOption) (*AlertRulePagingResponse, error) {
	client := pb.NewMonitoringManagerClient(m.cli.Conn())
	return client.AlertRulePaging(ctx, in, opts...)
}

func (m *defaultMonitoringManager) AlertRuleCount(ctx context.Context, in *AlertRuleCountRequest, opts ...grpc.CallOption) (*Total, error) {
	client := pb.NewMonitoringManagerClient(m.cli.Conn())
	return client.AlertRuleCount(ctx, in, opts...)
}
