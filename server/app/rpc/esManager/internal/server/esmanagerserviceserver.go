// Code generated by goctl. DO NOT EDIT!
// Source: esManager.proto

package server

import (
	"context"

	"github.com/zhaoqiang0201/zero-vue-admin/server/app/rpc/esManager/internal/logic"
	"github.com/zhaoqiang0201/zero-vue-admin/server/app/rpc/esManager/internal/svc"
	"github.com/zhaoqiang0201/zero-vue-admin/server/app/rpc/esManager/pb"
)

type EsManagerServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedEsManagerServiceServer
}

func NewEsManagerServiceServer(svcCtx *svc.ServiceContext) *EsManagerServiceServer {
	return &EsManagerServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *EsManagerServiceServer) ESConnPaging(ctx context.Context, in *pb.ESConnPagingRequest) (*pb.ESConnResponse, error) {
	l := logic.NewESConnPagingLogic(ctx, s.svcCtx)
	return l.ESConnPaging(in)
}

func (s *EsManagerServiceServer) ESConnTotal(ctx context.Context, in *pb.Empty) (*pb.Total, error) {
	l := logic.NewESConnTotalLogic(ctx, s.svcCtx)
	return l.ESConnTotal(in)
}

func (s *EsManagerServiceServer) Ping(ctx context.Context, in *pb.PingRequest) (*pb.PingResponse, error) {
	l := logic.NewPingLogic(ctx, s.svcCtx)
	return l.Ping(in)
}

func (s *EsManagerServiceServer) ESConnDetail(ctx context.Context, in *pb.ESConnID) (*pb.ESConn, error) {
	l := logic.NewESConnDetailLogic(ctx, s.svcCtx)
	return l.ESConnDetail(in)
}

func (s *EsManagerServiceServer) CreateESConn(ctx context.Context, in *pb.CreateESConnRequest) (*pb.Empty, error) {
	l := logic.NewCreateESConnLogic(ctx, s.svcCtx)
	return l.CreateESConn(in)
}

func (s *EsManagerServiceServer) UpdateESConn(ctx context.Context, in *pb.UpdateESConnRequest) (*pb.Empty, error) {
	l := logic.NewUpdateESConnLogic(ctx, s.svcCtx)
	return l.UpdateESConn(in)
}

func (s *EsManagerServiceServer) DeleteESConn(ctx context.Context, in *pb.ESConnID) (*pb.Empty, error) {
	l := logic.NewDeleteESConnLogic(ctx, s.svcCtx)
	return l.DeleteESConn(in)
}
