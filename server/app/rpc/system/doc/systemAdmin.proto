syntax = "proto3";

package pb;

option go_package = "./pb";

import "google/protobuf/empty.proto";

service SystemService {
  rpc Login (LoginRequest) returns(LoginResponse); //
  //casbin_rule
  rpc CasbinEnforcer(CasbinEnforceRequest) returns (CasbinEnforceResponse);
  rpc RefreshCasbinPolicy (Empty) returns (Empty);
  rpc CasbinPolicyByRoleID (RoleID) returns (CasbinPolicyResponse);
  rpc UpdateCasbinPolicy(UpdateCasbinPolicyRequest) returns (Empty);
  //user
  rpc UserDetail(UserID) returns (User); //
  rpc UserDetailByName(UserName) returns(User); //
  rpc UserPaging(UserPagingRequest) returns (UserPagingResponse); //
  rpc UserTotal(Empty) returns (Total); //
  rpc CreateUser_UserRole(CreateUser_UserRoleRequest) returns(Empty);
  rpc DeleteSoftUser(DeleteSoftUserRequest)returns(Empty);
  rpc DeleteUser(UserID) returns(Empty);
  rpc UpdateUserPassword(UpdateUserPasswordRequest)returns(Empty);
  rpc UpdateUser(UpdateUserRequest) returns(Empty);
  rpc UpdateUserCurrentRole(UpdateUserCurrentRoleRequest) returns(Empty);

  rpc UserPageSet(UserID) returns(UserPageSetResponse); //
  rpc UpdateUserPageSet(UpdateUserPageSetRequest) returns(Empty);

  rpc UserMenuParamsByUserID(UserID) returns (UserMenuParamsResponse);
  rpc UserAllMenuParams(Empty) returns (UserMenuParamsResponse);
  rpc UpdateUserMenuParams(UpdateUserMenuParamsRequest) returns(Empty);

  rpc UserRoleByUserID(UserID) returns (UserRoleResponse);
  rpc UpdateUserRole(UpdateUserRoleRequest) returns(Empty);

  rpc RoleDetail(RoleID) returns (Role); //
  rpc RoleAll (Empty) returns (RoleAllResponse); //
  rpc DeleteRole(RoleID)returns(Empty);
  rpc DeleteSoftRole(DeleteSoftRoleRequest)returns(Empty);
  rpc CreateRole(CreateRoleRequest) returns (Empty);
  rpc UpdateRole(UpdateRoleRequest) returns (Empty);

  rpc MenuDetail(MenuID) returns (Menu); //
  rpc MenuAll(Empty) returns (MenuAllResponse);
  rpc CreateMenu(CreateMenuRequest) returns (Empty);
  rpc UpdateMenu(UpdateMenuRequest) returns (Empty);
  rpc DeleteMenu_RoleMenu_UserMenuParam(MenuID) returns(Empty);

  rpc RoleMenuByRoleID(RoleID) returns (RoleMenuResponse);
  rpc UpdateRoleMenus(UpdateRoleMenusRequest) returns (Empty);

  rpc APIDetail (ApiID) returns (API);
  rpc APIAll(Empty) returns(APIAllResponse);
  rpc APIPaging (APIPagingRequest) returns (APIPagingResponse);
  rpc APITotal(APIPagingRequest) returns (Total); //
  rpc CreateAPI (CreateAPIRequest) returns(Empty);
  rpc UpdateAPI (API) returns (Empty);  //更新删除casbin权限
  rpc DeleteAPIAndCasbin(DeleteAPIAndCasbinRequest) returns (Empty); //删除casbin权限
  rpc DeleteAPIMultipleAndCasbin(DeleteAPIMultipleAndCasbinRequest) returns (Empty); //删除casbin权限

  rpc Test(Empty) returns (Total);
}

//-------------------
//请求
//-------------------
message Empty {}

message UserID {
  uint64 ID = 1;
}

message UserName {
  string Name = 1;
}

message RoleID {
  uint64 ID = 1;
}

message MenuID {
  uint64 ID = 1;
}

message ApiID {
  uint64 ID = 1;
}

message DeleteAPIMultipleAndCasbinRequest {
  repeated DeleteAPIAndCasbinRequest APIs = 1;
}

message DeleteAPIAndCasbinRequest {
  uint64 ID = 1;
  string Api = 2;
  string Method = 3;
}

message Total{
  int64 Total = 1;
}

message UpdateUserMenuParamsRequest {
  uint64 MenuId = 1;
  repeated UserMenuParams UserMenuParams = 2;
}

message CasbinEnforceRequest {
  string Sub = 1;
  string Obj = 2;
  string Act = 3;
}

message CasbinEnforceResponse {
  bool Success = 1;
}

message UpdateUserCurrentRoleRequest {
  uint64 UserID = 1;
  uint64 RoleID = 2;
}

message UpdateUserRequest {
  uint64 ID = 1;
  string Name = 2;
  string NickName = 3;
  string Email = 4;
  string Phone = 5;
  string Department = 6;
  string Position = 7;
  string UpdateBy = 8;
}

message CreateUser_UserRoleRequest {
  User User = 1;
  repeated uint64 RoleList = 2;
}

message UpdateCasbinPolicyRequest {
  string v0 = 1;
  repeated CasbinRule CasbinRules = 2;
}

message CasbinRule {
  string v1 = 2;
  string v2 = 3;
}

message UpdateRoleRequest {
  uint64 ID = 1;
  string Role = 2;
  string Name = 3;
  string CreateBy = 4;
  string UpdateBy = 5;
  string DeleteBy = 6;
}

message CreateRoleRequest {
  string Role = 1;
  string Name = 2;
  string CreateBy = 3;
}

message UpdateUserRoleRequest {
  uint64 UserID = 1;
  repeated uint64 RoleList = 2;
}

message UpdateRoleMenusRequest {
  uint64 RoleID = 1;
  repeated uint64 MenuIDList = 2;
}

message UpdateUserPageSetRequest {
  uint64 UserID = 1;
  string Avatar = 2;
  string DefaultRouter = 3;
  string SideMode = 4;
  string ActiveTextColor = 5;
  string TextColor = 6;
}

message DeleteSoftUserRequest{
  uint64 UserID = 1;
  string DeleteBy = 2;
  string State = 3;
}

message DeleteSoftRoleRequest{
  uint64 RoleID = 1;
  string DeleteBy = 2;
  string State = 3;
}

message UpdateUserPasswordRequest {
  uint64 ID = 1;
  string Password = 2;
}

message CreateMenuRequest{
  uint64 ParentID = 1;
  string Name = 2;
  string Path = 3;
  string Component = 4;
  string Title = 5;
  string Icon =  6;
  int64  sort = 7;
  int64 Hiddent = 8;
}

message CreateAPIRequest{
  string API = 1;
  string Group = 2;
  string Describe = 3;
  string Method = 4;
}

message UpdateMenuRequest{
  uint64 id = 1;
  uint64 ParentID = 2;
  string Name = 3;
  string Path = 4;
  string Component = 5;
  string Title = 6;
  string Icon =  7;
  int64  sort = 8;
  int64 Hiddent = 9;
}

//-------------
//请求响应
message UserPagingRequest {
  int64 Page = 1;
  int64 PageSize = 2;
  string NameX = 3;
}
message UserPagingResponse {
  repeated User Users = 1;
}

message APIAllResponse {
  repeated API APIs = 1;
}

message CasbinPolicyResponse {
  repeated CasbinPolicy Policy = 1;
}

message CasbinPolicy {
  string Api = 1;
  string method = 2;
}

message APIPagingRequest {
  int64 Page = 1;
  int64 PageSize = 2;
  string OrderKey = 3;
  string Order = 4;
  string Api = 5;
  string Describe = 6;
  string Group = 7;
  string Method = 8;
}
message APIPagingResponse {
  repeated API APIs = 2;
}
//---------
message RoleAllResponse {
  repeated Role Roles = 1;
}

message MenuAllResponse {
  repeated Menu Menus = 1;
}


message UserMenuParamsResponse {
  repeated UserMenuParams UserMenuParams = 1;
}

message RoleMenuResponse {
  repeated RoleMenu Rolemenus = 1;
}

message UserRoleResponse {
  repeated UserRole UserRoles = 1;
}
//user_menu_params模型
message UserMenuParams {
  uint64 ID = 1;
  uint64 UserID = 2;
  uint64 MenuID = 3;
  string Type = 4;
  string Key = 5;
  string Value = 6;
}
//menu模型
message Menu {
  uint64 ID = 1;
  uint64 ParentID = 2;
  string Name = 3;
  string Path = 4;
  string Component = 5;
  string Title = 6;
  string Icon =  7;
  int64  sort = 8;
  int64 Hiddent = 9;
  int64 CreateTime = 10;
  int64 UpdateTime = 11;
  int64 DeleteTime = 12;
}
//roleMenu模型
message RoleMenu {
  uint64 id = 1;
  uint64 MenuID = 2;
  uint64 RoleID = 3;
}
//userRole模型
message UserRole {
  uint64 ID = 1;
  uint64 UserID = 2;
  uint64 RoleID = 3;
}
//api模型
message API {
  uint64 ID = 1;
  string API = 2;
  string Group = 3;
  string Describe = 4;
  string Method = 5;
}
//角色模型
message Role {
  uint64 ID = 1;
  string Role = 2;
  string Name = 3;
  string CreateBy = 4;
  int64 CreateTime = 5;
  string UpdateBy = 6;
  int64 UpdateTime = 7;
  string DeleteBy = 8;
  int64 DeleteTime = 9;
}
// 用户模型
message User {
  uint64 ID = 1;
  string Name = 2;
  string NickName = 3;
  string PassWord = 4;
  int64 UserType = 5;
  string Email = 6;
  string Phone = 7;
  string Department = 8;
  string Position = 9;
  uint64 CurrentRole = 10;
  string CreateBy = 11;
  int64 CreateTime = 12;
  string UpdateBy = 13;
  int64 UpdateTime = 14;
  string DeleteBy = 15;
  int64 DeleteTime = 16;
}
//用户页面设置模型
message UserPageSetResponse {
  uint64 ID = 1;
  uint64 UserId = 2;
  string Avatar = 3;
  string DefaultRouter = 4;
  string SideMode = 5;
  string ActiveTextColor = 6;
  string TextColor = 7;
}

message LoginRequest {
  string Name = 1;
  string PassWord = 2;
}

message LoginResponse {
  string Token = 1;
  int64 ExporeAt = 2;
  int64 RefreshAfter = 3;
  uint64 CurrentRole = 4;
  uint64 UserID = 5;
}