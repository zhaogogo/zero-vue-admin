// Code generated by goctl. DO NOT EDIT.
package types

type ChangePasswordRequest struct {
	ID       uint64 `json:"id,optional" validate:"required,numeric,gte=1"`
	Password string `json:"password,optional" validate:"required"`
}

type UpdateUserRoleRequest struct {
	UserID   uint64   `json:"userId,optional" validate:"required"`
	RoleList []uint64 `json:"roleList,optional" validate:"required"`
}

type SoftDeleteUserRequest struct {
	UserID uint64 `json:"userId,optional" validate:"required,numeric,gte=1" comment="用户ID为必填项"`
	State  string `json:"state,optional" validate:"required,oneof='deleted' 'resume'"`
}

type PagingUserRequest struct {
	PagingCommonRequest
}

type PagingUserResponse struct {
	HttpCommonResponse
	PagingCommonResponse
	List []User `json:"list"`
}

type User struct {
	ID         uint64   `json:"id"`
	Name       string   `json:"name"`
	NickName   string   `json:"nick_name"`
	PassWord   string   `json:"password"`
	UserType   int64    `json:"type"`
	Email      string   `json:"email"`
	Phone      string   `json:"phone"`
	Department string   `json:"department"`
	Position   string   `json:"position"`
	CreateBy   string   `json:"createBy"`
	CreateTime int64    `json:"create_time"`
	UpdateBy   string   `json:"updateBy"`
	UpdateTime int64    `json:"update_time"`
	DeleteBy   string   `json:"deleteBy"`
	DeleteTime int64    `json:"delete_time"`
	State      string   `json:"state"`    // todelete:用户已删除  resume:用户未删除
	RoleList   []uint64 `json:"roleList"` // 用户角色
}

type LoginRequest struct {
	UserName string `json:"userName,optional" validate:"required" comment:"用户名"`
	PassWord string `json:"passWord,optional" validate:"required" comment:"密码"`
}

type LoginResponse struct {
	HttpCommonResponse
	Token        string      `json:"token"`
	ExpireAt     int64       `json:"expireAt"`
	RefreshAfter int64       `json:"refreshAfter"`
	Name         string      `json:"name"`
	Role         []string    `json:"role"`
	UserPageSet  UserPageSet `json:"userPageSet"`
}

type UserPageSet struct {
	Name            string `json:"name"`
	NickName        string `json:"nick_name"`
	Avatar          string `json:"avatar"`
	DefaultRouter   string `json:"defaultRouter"`
	SideMode        string `json:"sideMode"`
	ActiveTextColor string `json:"activeTextColor"`
	TextColor       string `json:"textColor"`
}

type HttpCommonResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type PagingCommonRequest struct {
	Page     int64 `json:"page,optional" validate:"required,numeric,gte=1,lte=999" comment:"page为必须值"`
	PageSize int64 `json:"pageSize,optional" validate:"required,numeric,gte=10,lte=100" comment:"pageSize为必须值"`
}

type PagingCommonResponse struct {
	Page     int64 `json:"page"`
	PageSize int64 `json:"pageSize"`
	Total    int64 `json:"total"`
}

type AllRoleResponse struct {
	HttpCommonResponse
	Total int    `json:"total"`
	List  []Role `json:"list"`
}

type Role struct {
	ID   uint64 `json:"id"`
	Role string `json:"role"`
	Name string `json:"name"`
}

type UserMenuResponse struct {
	HttpCommonResponse
	Menus []Menu `json:"menus"`
}

type Menu struct {
	ID         uint64      `json:"id"`
	ParentId   uint64      `json:"parentId"`
	Name       string      `json:"name"`
	Path       string      `json:"path"`
	Component  string      `json:"component"`
	Sort       int64       `json:"sort"`
	MenuMeta   MenuMeta    `json:"meta"`
	Children   []Menu      `json:"children,omitempty"`
	Parameters []Parameter `json:"parameters"`
}

type Parameter struct {
	UserID uint64 `json:"user_id"`
	MenuID uint64 `json:"menuId"`
	Type   string `json:"type"`
	Key    string `json:"key"`
	Value  string `json:"value"`
}

type MenuMeta struct {
	Title string `json:"title"`
	Icon  string `json:"icon"`
}
