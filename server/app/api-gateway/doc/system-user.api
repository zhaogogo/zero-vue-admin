syntax = "v1"

info(
    title: "系统用户"
    desc: "系统用户"
    author: "qiang.zhao"
    email: "zhaoq0201@163.com"
    version: "v1"
)

import "common.api"

@server(
    group: system/user
    prefix: /api/v1/system/user
)
service ApiGateway-api {
    @doc "用户登陆"
    @handler Login
    post /login (LoginRequest) returns (LoginResponse)
}

@server(
    jwt: Auth
    middleware: Casbin,CheckUserExists
    group: system/user
    prefix: /api/v1/system/user
)
service ApiGateway-api {
    @doc "分页获取用户"
    @handler PagingUserInfo
    post /paginguser (PagingUserRequest) returns (PagingUserResponse)

    @doc "修改用户密码"
    @handler ChangeUserPassword
    post /changeUserPassword(ChangePasswordRequest) returns(HttpCommonResponse)

    @doc "修改用户角色"
    @handler UpdateUserRole
    post /updateUserRole(UpdateUserRoleRequest) returns(HttpCommonResponse)

    @doc "软删除用户"
    @handler SoftDeleteUser
    delete /softdelete(SoftDeleteUserRequest) returns (HttpCommonResponse)

    @doc "删除用户"
    @handler Delete
    delete /delete (UserID) returns (HttpCommonResponse)

    @doc "新增用户"
    @handler AddUser
    post /addUser (AddUserRequest) returns (HttpCommonResponse)

    @doc "修改用户页面配置"
    @handler SetUserPage
    put /setuserpageset (UserPageRequest) returns (HttpCommonResponse)
}

type ChangePasswordRequest struct {
    ID uint64 `json:"id,optional" validate:"required,numeric,gte=1"`
    Password string `json:"password,optional" validate:"required"`
}

type UpdateUserRoleRequest struct {
    UserID uint64 `json:"userId,optional" validate:"required"`
    RoleList []uint64 `json:"roleList,optional"`
}

type SoftDeleteUserRequest struct {
    UserID uint64 `json:"userId,optional" validate:"required,numeric,gte=2" comment="用户ID为必填项"`
    State string `json:"state,optional" validate:"required,oneof='deleted' 'resume'"`
}
type UserPageRequest struct {
    Avatar string `json:"avatar,default=,optional"`
    DefaultRouter string `json:"defaultRouter,default=dashboard,optional" validate:"required"`
    SideMode string `json:"sideMode,default=#191a23,optional" validate:"required"`
    ActiveTextColor string `json:"activeTextColor,default=#1890ff,optional" validate:"required"`
    TextColor string `json:"textColor,default=#fff,optional" validate:"required"`
}

type UserID struct {
    ID uint64 `json:"id" validate:"required,numeric,gte=2"`
}

//----------------------------------------------
// 用户模型
//----------------------------------------------
type (
    PagingUserRequest struct {
        PagingCommonRequest
    }
    PagingUserResponse struct {
        HttpCommonResponse
        PagingCommonResponse
        List []User `json:"list"`
    }
    AddUserRequest struct {
        Name string `json:"name,optional" validate:"required,gte=5"`
        NickName string `json:"nick_name,optional" validate:"required,gte=5"`
        PassWord string `json:"password,optional" validate:"required,gte=5"`
        UserType int64 `json:"type,default=0,optional"`
        Email string `json:"email,optional" validate:"required,email"`
        Phone int64 `json:"phone,optional" validate:"required,numeric,gte=10000000000,lte=19999999999"`
        department string `json:"department,optional"`
        position string `json:"position,optional"`
        CreateBy string `json:"createBy,optional"`
        CreateTime int64 `json:"create_time,optional"`
        UpdateBy string `json:"updateBy,optional"`
        UpdateTime int64 `json:"update_time,optional"`
        DeleteBy string `json:"deleteBy,optional"`
        DeleteTime int64 `json:"delete_time,optional"`
        State string `json:"state,optional"` // todelete:用户已删除  resume:用户未删除
        RoleList []uint64 `json:"roleList,optional"` // 用户角色
    }
    User struct {
        ID uint64 `json:"id"`
        Name string `json:"name"`
        NickName string `json:"nick_name"`
        PassWord string `json:"password"`
        UserType int64 `json:"type"`
        Email string `json:"email"`
        Phone string `json:"phone"`
        department string `json:"department"`
        position string `json:"position"`
        CreateBy string `json:"createBy"`
        CreateTime int64 `json:"create_time"`
        UpdateBy string `json:"updateBy"`
        UpdateTime int64 `json:"update_time"`
        DeleteBy string `json:"deleteBy"`
        DeleteTime int64 `json:"delete_time"`
        State string `json:"state"` // todelete:用户已删除  resume:用户未删除
        RoleList []uint64 `json:"roleList"` // 用户角色
    }
)

//----------------------------------------------
// 用户登陆模型
//----------------------------------------------
type (
    LoginRequest {
        UserName string `json:"userName,optional" validate:"required" comment:"用户名"`
        PassWord string `json:"passWord,optional" validate:"required" comment:"密码"`
    }
    LoginResponse {
        HttpCommonResponse
        Token string   `json:"token"`
        ExpireAt int64 `json:"expireAt"`
        RefreshAfter int64 `json:"refreshAfter"`
        Name string `json:"name"`
        Role []string `json:"role"`
        UserPageSet UserPageSet `json:"userPageSet"`
    }
    UserPageSet struct {
        Name string `json:"name"`
        NickName string `json:"nick_name"`
        Avatar string `json:"avatar"`
        DefaultRouter string `json:"defaultRouter"`
        SideMode string `json:"sideMode"`
        ActiveTextColor string `json:"activeTextColor"`
        TextColor string `json:"textColor"`
    }
)



