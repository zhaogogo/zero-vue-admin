syntax = "v1"

info(
    title: "用户中心服务"
    desc: "用户登陆授权服务"
    author: "zhaoqiang"
    email: "zhaoq0201@163.com"
    version: "v1"
)

type (
    MenuMeta {
        Title string `json:"title"`
        Icon string `json:"icon"`
    }
    Menu {
        ID int64 `json:"id"`
        ParentID int64   `json:"parentID"`
        Path string `json:"path"`
        Name string `json:"name"`
        Component string `json:"component"`
        Meta MenuMeta `json:"meta"`
        Hidden int64 `json:"hidden"`
        Children []*Menu `json:"children"`
    }
    Button {
        Name string `json:"name"`
        Path string `json:"path"`
        Method string `json:"method"`
        MenuID int64 `json:"menuID"`
        RoleId int64  `json:"roleId"`
    }
)


type (
    LoginRequest {
        UserName string `json:"userName,optional" validate:"required" comment:"用户名字"`
        PassWord string `json:"passWord,optional" validate:"required" comment:"密码"`
    }
    LoginResponse {
        Token string   `json:"token"`
        ExpireAt int64 `json:"expireAt"`
        RefreshAfter int64 `json:"refreshAfter"`
    }
    User {
        Id  int64 `json:"id"`
        Name string `json:"name"`
        NickName string `json:"nickName"`
        Avatar string `json:"avatar"`
        PassWord string `json:"-"`
        Email string `json:"email"`
        Mobile string `json:"mobile"`
        Status int64 `json:"status"`
        DefaultRouter string `json:"defaultRouter"`
        CreateBy string `json:"createBy"`
        CreateAt int64 `json:"createAt"`
        UpdateBy string `json:"updateBy"`
        UpdateAt int64 `json:"updateAt"`
    }
    Permission {
        UserInfo User   `json:"userInfo"`
        Menus []*Menu `json:"menuList"`
        Buttons []*Button `json:"buttons"`
    }
)

@server(
    jwt: Auth
    middleware: CheckUrl
    group: usercenter/user
    prefix: api/user
)
service userCenter-api {
    @handler Permission
    get /permission returns (Permission)
}

@server(
    group: usercenter/user
    prefix: /api/user
)
service userCenter-api {
    @handler Login
    post /login (LoginRequest) returns (LoginResponse)
}
